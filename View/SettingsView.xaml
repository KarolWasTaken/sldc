<UserControl x:Class="sldc.View.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:sldc.View"
             xmlns:Converters="clr-namespace:sldc.Converter"
             xmlns:ElementThemes="clr-namespace:sldc.Themes.ElementThemes"
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="750">
    <UserControl.Resources>
        <Converters:BooleanToColourIndicatorConverter x:Key="BooleanToColourIndicatorConverter"/>
        <Converters:BooleanToEnabledConverter x:Key="BooleanToEnabledConverter"/>
        <Converters:HexCodeToBrushConverter x:Key="HexCodeToBrushConverter"/>
        <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid>
                            <Border Name="_Border"
                                    SnapsToDevicePixels="true"
                                    BorderThickness="1"
                                    Background="Transparent">
                            </Border>
                            <Border Name="_Inner"
                                    SnapsToDevicePixels="true"
                                    BorderThickness="0">
                            </Border>
                            <ContentPresenter />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="_Inner" Property="Background" Value="#FF0000"/>
                                <Setter TargetName="_Inner" Property="Opacity" Value="0.5"/>
                                <Setter TargetName="_Border" Property="BorderBrush" Value="#FF0000"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="_Inner" Property="Background" Value="#FF0000"/>
                                <Setter TargetName="_Inner" Property="Opacity" Value="0.25"/>
                                <Setter TargetName="_Border" Property="BorderBrush" Value="#FF0000"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="_Inner" Property="Background" Value="White"/>
                                <Setter TargetName="_Inner" Property="Opacity" Value="0.25"/>
                                <Setter TargetName="_Border" Property="BorderBrush" Value="White"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextColour}"/>
                            </MultiTrigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Credit: https://gist.github.com/hansmaad/9187633 -->
        <!-- Flat ComboBox -->
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red"/>

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
                         BorderBrush="{DynamicResource Background}" 
                         CornerRadius="0" BorderThickness="1, 1, 1, 1" 
                         Background="{DynamicResource Background_Level_3}" />  
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
                        CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
                        Background="{DynamicResource Background}"
                        Cursor="Hand"/>

                <Path Name="Arrow" Grid.Column="1" 
                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                      HorizontalAlignment="Center" Fill="#444"
                      VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource Background}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource Background_Level_2}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="{DynamicResource TextColour}"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                                           ClickMode="Press" Focusable="False"
                                           IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                           Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     Visibility="Hidden" Background="Transparent"
                                     HorizontalAlignment="Left" VerticalAlignment="Center"
                                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                                   Focusable="False" AllowsTransparency="True"
                                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                   PopupAnimation="Slide">
                                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                                                      MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                                      MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="{DynamicResource Background}" Margin="0, 1, 0, 0"
                                            CornerRadius="0" BorderThickness="1,1,1,1" 
                                            BorderBrush="{DynamicResource Background_Level_3}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="{DynamicResource TextColour}"/>
            <Setter Property="Background" Value="{DynamicResource Background}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid>
                            <Border Name="_Border"
                                    SnapsToDevicePixels="true"
                                    BorderThickness="1"
                                    Background="Transparent">
                            </Border>
                            <Border Name="_Inner"
                                    SnapsToDevicePixels="true"
                                    BorderThickness="0">
                            </Border>
                            <ContentPresenter Margin="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="_Inner" Property="Background" Value="#FF0000"/>
                                <Setter TargetName="_Inner" Property="Opacity" Value="0.5"/>
                                <Setter TargetName="_Border" Property="BorderBrush" Value="#FF0000"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="_Inner" Property="Background" Value="#FF0000"/>
                                <Setter TargetName="_Inner" Property="Opacity" Value="0.25"/>
                                <Setter TargetName="_Border" Property="BorderBrush" Value="#FF0000"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="_Inner" Property="Background" Value="White"/>
                                <Setter TargetName="_Inner" Property="Opacity" Value="0.25"/>
                                <Setter TargetName="_Border" Property="BorderBrush" Value="White"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextColour}"/>
                            </MultiTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of Flat ComboBox -->

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="70"/>
        </Grid.RowDefinitions>

        <TextBlock Style="{StaticResource HeaderTextStyle}"
                   Margin="20,20,0,0">
            SETTINGS
        </TextBlock>

        <Grid Grid.Row="1"
              Margin="5,0,10,0">
            <ScrollViewer CanContentScroll="False"
                          ElementThemes:ModernScrollBarBackgroundHelper.ScrollBarThumbBackground="{DynamicResource Background_Level_3}">
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Margin" Value="0,0,0,10"/>
                        </Style>
                    </StackPanel.Resources>
                    <Border Background="{DynamicResource Background_Level_2}"
                            Height="70"
                            CornerRadius="10">
                        <StackPanel>
                            <TextBlock Text="Theme"
                                       FontFamily="{StaticResource Inter}"
                                       FontWeight="Regular"
                                       FontSize="20"
                                       Foreground="{DynamicResource TextColour}"
                                       Opacity="0.8"
                                       Margin="10,5,0,0"/>
                            <ComboBox Width="100"
                                      HorizontalAlignment="Left"
                                      Margin="10,5,0,0"
                                      ItemsSource="{Binding ThemeList}"
                                      SelectedIndex="{Binding SelectedThemeIndex}"
                                      SelectedItem="{Binding SelectedTheme, UpdateSourceTrigger=PropertyChanged}"
                                      Style="{StaticResource ComboBoxFlatStyle}">
                            </ComboBox>
                        </StackPanel>
                    </Border>
                    <Border Background="{DynamicResource Background_Level_2}"
                            CornerRadius="10">
                        <StackPanel>
                            <TextBlock Text="Streamer Window Font"
                                       FontFamily="{StaticResource Inter}"
                                       FontWeight="Regular"
                                       FontSize="20"
                                       Foreground="{DynamicResource TextColour}"
                                       Opacity="0.8"
                                       Margin="10,5,0,0"/>
                            <StackPanel>
                                <DockPanel Margin="10,10,10,10">
                                    <ListBox x:Name="fontSelector" 
                                             Height="150"
                                             Width="230"
                                             ItemContainerStyle="{DynamicResource ListBoxItemStyle}"
                                             Background="{DynamicResource Background_Level_3}"
                                             BorderThickness="3"
                                             BorderBrush="{DynamicResource Background}"
                                             Foreground="{DynamicResource TextColour}"
                                             ItemsSource="{x:Static Fonts.SystemFontFamilies}"
                                             SelectedItem="{Binding SelectedFontFamily, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <ListBox x:Name="typefaceSelector" 
                                             Height="150"
                                             Width="213"
                                             HorizontalAlignment="Left"
                                             ItemContainerStyle="{DynamicResource ListBoxItemStyle}"
                                             Background="{DynamicResource Background_Level_3}"
                                             BorderThickness="3"
                                             BorderBrush="{DynamicResource Background}"
                                             Foreground="{DynamicResource TextColour}"
                                             ItemsSource="{Binding SelectedItem.FamilyTypefaces, ElementName=fontSelector}"
                                             SelectedItem="{Binding SelectedTypeface, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             DisplayMemberPath="AdjustedFaceNames[en-US]" 
                                             Grid.Column="1">
                                        <ListBox.Template>
                                            <ControlTemplate TargetType="{x:Type ListBox}">
                                                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                                    <ScrollViewer x:Name="ScrollViewer" Focusable="false" Padding="{TemplateBinding Padding}"
                                                                  ElementThemes:ModernScrollBarBackgroundHelper.ScrollBarThumbBackground="{DynamicResource Background}"
                                                                  Margin="0,0,3,0">
                                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                                    </ScrollViewer>
                                                </Border>
                                            </ControlTemplate>
                                        </ListBox.Template>
                                    </ListBox>
                                    <DockPanel HorizontalAlignment="Center">
                                        <StackPanel HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Margin="0,0,5,0">
                                            <StackPanel.Resources>
                                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource SubHeaderTextStyle}">
                                                    <Setter Property="TextAlignment" Value="Right"/>
                                                    <Setter Property="Margin" Value="0,0,0,10"/>
                                                </Style>
                                            </StackPanel.Resources>
                                            <TextBlock Text="Font Colour: "/>
                                            <!--<TextBlock Text="Stroke Thickness: "/>
                                            <TextBlock Text="Stroke Colour: "/>-->
                                        </StackPanel>
                                        <StackPanel HorizontalAlignment="Left"
                                                    VerticalAlignment="Center">
                                            <StackPanel.Resources>
                                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
                                                    <Setter Property="FontSize" Value="15"/>
                                                    <Setter Property="Width" Value="80"/>
                                                    
                                                    <Setter Property="Margin" Value="0,0,0,10"/>
                                                    <Setter Property="CharacterCasing" Value="Upper"/>
                                                    <Setter Property="MaxLength" Value="7"/>
                                                </Style>
                                            </StackPanel.Resources>
                                            <TextBox Text="{Binding FontColourHex, UpdateSourceTrigger=PropertyChanged}"/>
                                            <!--<TextBox Text="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged}"/>
                                            <TextBox Text="{Binding StrokeColour, UpdateSourceTrigger=PropertyChanged}"/>-->
                                        </StackPanel>
                                    </DockPanel>
                                </DockPanel>
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Bottom"
                                           Text="Hello World!"
                                           FontSize="25"
                                           Margin="0,0,0,10"
                                           Padding="5,0,5,0"
                                           Foreground="{Binding FinalFontColour, Converter={StaticResource HexCodeToBrushConverter}, FallbackValue=White}"
                                           Background="Green"
                                           FontFamily="{Binding SelectedFontFamily, TargetNullValue='Arial'}"
                                           FontStretch="{Binding SelectedFontStretch}"
                                           FontStyle="{Binding SelectedFontStyle}"
                                           FontWeight="{Binding SelectedFontWeight}"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                    <Border Background="{DynamicResource Background_Level_2}"
                            Height="70"
                            CornerRadius="10">
                        <StackPanel>
                            <DockPanel Margin="10,5,0,0">
                                <TextBlock Text="Minimise to Toolbar"
                                           FontFamily="{StaticResource Inter}"
                                           FontWeight="Regular"
                                           FontSize="20"
                                           Foreground="{DynamicResource TextColour}"
                                           Opacity="0.8"/>
                                <Border Background="{Binding EnableMinimiseToToolbar, Converter={StaticResource BooleanToColourIndicatorConverter}, FallbackValue=Yellow}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Width="10"
                                        Height="10"
                                        CornerRadius="5"
                                        Margin="5,2,0,0"/>
                            </DockPanel>

                            <Button Style="{StaticResource PrimaryButtonStyle}"
                                    Background="{DynamicResource Background_Level_3}"
                                    Content="{Binding EnableMinimiseToToolbar, Converter={StaticResource BooleanToEnabledConverter}, FallbackValue=Enable}"
                                    HorizontalAlignment="Left"
                                    Margin="10,5,0,0"
                                    Width="100"
                                    Height="25"
                                    Padding="0,3,0,0"
                                    ElementThemes:PrimaryButtonStyleHelper.CornerRadius="8"
                                    Command="{Binding ToggleMinimiseToToolbarCommand}"/>
                        </StackPanel>
                    </Border>
                    <Border Background="{DynamicResource Background_Level_2}"
                            Height="70"
                            CornerRadius="10">
                        <StackPanel>
                            <DockPanel Margin="10,5,0,0">
                                <TextBlock Text="Discord Rich Presence"
                                           FontFamily="{StaticResource Inter}"
                                           FontWeight="Regular"
                                           FontSize="20"
                                           Foreground="{DynamicResource TextColour}"
                                           Opacity="0.8"/>
                                <Border Background="{Binding DRPStatus, Converter={StaticResource BooleanToColourIndicatorConverter}, FallbackValue=Yellow}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Width="10"
                                        Height="10"
                                        CornerRadius="5"
                                        Margin="5,2,0,0"/>
                            </DockPanel>

                            <Button Style="{StaticResource PrimaryButtonStyle}"
                                    Background="{DynamicResource Background_Level_3}"
                                    Content="{Binding DRPStatus, Converter={StaticResource BooleanToEnabledConverter}, FallbackValue=Enable}"
                                    HorizontalAlignment="Left"
                                    Margin="10,5,0,0"
                                    Width="100"
                                    Height="25"
                                    Padding="0,3,0,0"
                                    ElementThemes:PrimaryButtonStyleHelper.CornerRadius="8"
                                    Command="{Binding ToggleDRPCommand}"/>
                        </StackPanel>
                    </Border>
                    <Border Background="{DynamicResource Background_Level_2}"
                            Height="70"
                            CornerRadius="10">
                        <StackPanel>
                            <DockPanel Margin="10,5,0,0">
                                <TextBlock Text="DRP Credit"
                                           FontFamily="{StaticResource Inter}"
                                           FontWeight="Regular"
                                           FontSize="20"
                                           Foreground="{DynamicResource TextColour}"
                                           Opacity="0.8"/>
                                <Border Background="{Binding EnableDRPCredit, Converter={StaticResource BooleanToColourIndicatorConverter}, FallbackValue=Yellow}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Width="10"
                                        Height="10"
                                        CornerRadius="5"
                                        Margin="5,2,0,0"/>
                            </DockPanel>

                            <Button Style="{StaticResource PrimaryButtonStyle}"
                                    Background="{DynamicResource Background_Level_3}"
                                    Content="{Binding EnableDRPCredit, Converter={StaticResource BooleanToEnabledConverter}, FallbackValue=Enable}"
                                    HorizontalAlignment="Left"
                                    Margin="10,5,0,0"
                                    Width="100"
                                    Height="25"
                                    Padding="0,3,0,0"
                                    ElementThemes:PrimaryButtonStyleHelper.CornerRadius="8"
                                    Command="{Binding ToggleDRPCreditCommand}"/>
                        </StackPanel>
                    </Border>
                    <Border Background="{DynamicResource Background_Level_2}"
                            Height="70"
                            CornerRadius="10">
                        <StackPanel>
                            <DockPanel Margin="10,5,0,0">
                                <TextBlock Text="Covenant Display"
                                           FontFamily="{StaticResource Inter}"
                                           FontWeight="Regular"
                                           FontSize="20"
                                           Foreground="{DynamicResource TextColour}"
                                           Opacity="0.8"/>
                                <Border Background="{Binding EnableCovenantDisplay, Converter={StaticResource BooleanToColourIndicatorConverter}, FallbackValue=Yellow}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Width="10"
                                        Height="10"
                                        CornerRadius="5"
                                        Margin="5,2,0,0"/>
                            </DockPanel>

                            <Button Style="{StaticResource PrimaryButtonStyle}"
                                    Background="{DynamicResource Background_Level_3}"
                                    Content="{Binding EnableCovenantDisplay, Converter={StaticResource BooleanToEnabledConverter}, FallbackValue=Enable}"
                                    HorizontalAlignment="Left"
                                    Margin="10,5,0,0"
                                    Width="100"
                                    Height="25"
                                    Padding="0,3,0,0"
                                    ElementThemes:PrimaryButtonStyleHelper.CornerRadius="8"
                                    Command="{Binding ToggleCovenantDisplayCommand}"/>
                        </StackPanel>
                    </Border>
                    <Border Height="70" Background="Transparent" x:Name="Spacer"/>
                </StackPanel>
            </ScrollViewer>
            <!--Cannot find a way to have this above scrollviewer children but behind scrollbar-->
            <!--<Border x:Name="GradientTransparency"
                    Grid.Row="1"
                    Height="100"
                    Width="750"
                    Background="Yellow"
                    VerticalAlignment="Bottom">
                <Border.OpacityMask>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                        <GradientStop Color="#FFFFFFFF" Offset="0.8"/>
                        <GradientStop Color="#00FFFFFF" Offset="0.5"/>
                    </LinearGradientBrush>
                </Border.OpacityMask>
            </Border>-->
        </Grid>

        <DockPanel Grid.Row="2"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Center">
            <DockPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle}">
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="Width" Value="80"/>
                    <Setter Property="Padding" Value="0,11,0,0"/>
                    <Setter Property="Margin" Value="0,0,10,0"/>
                    <Setter Property="ElementThemes:PrimaryButtonStyleHelper.CornerRadius" Value="20"/>
                </Style>
            </DockPanel.Resources>
            <Button Content="Revert"
                    Command="{Binding RevertSettingsToDefaultCommand}"/>
            <Button Content="Apply" IsEnabled="{Binding CanCommitChanges}"
                    Command="{Binding CommittSettingsChangesCommand}"/>
        </DockPanel>

    </Grid>
</UserControl>
